/* ---------- Design tokens (easy theme tweaks) ---------- */
:root {
	--glass-bg: rgba(255, 255, 255, 0.15);
	--glass-bg-speed: rgba(255, 255, 255, 0.288);
	--glass-border: rgba(255, 255, 255, 0.35);
	--glass-shadow: 0 4px 16px rgba(0, 0, 0, 0.25);
	--bar-bg: rgba(255, 255, 255, 0.2);
	--bar-bg-speed: rgba(255, 255, 255, 0.096);
	--bar-fill: #f87171; /* warm red for enemy HP */
	--bar-fill-speed: #bbbd9c;
	--bar-height: 0.75rem;
	--bar-height-small: 0.15rem; /* reuse across the UI if you wish */
}

/* ---------- Component wrapper ---------- */

.char-holders {
	display: flex; /* makes the children sit in a row       */
	flex-wrap: wrap; /* lets them wrap *if* the screen is tiny */
	gap: 1rem; /* maintains the nice 16 px gap           */

	/* (stylistic rules you already had) */
	padding: 1rem 1.25rem;
	border: 1px solid var(--glass-border);
	border-radius: 0.25rem;
}

.char-holder {
	/* existing visual stuff… */
	display: flex;
	flex-direction: row;
	align-items: flex-start;
	gap: 1rem;
	padding: 1rem 1.25rem;
	border-radius: 0.4rem;
	background: var(--glass-bg);
	border: 1px solid var(--glass-border);
	box-shadow: var(--glass-shadow);

	/* updated sizing + flex behaviour ↓↓↓ */
	flex: 1 1 0; /* grow+shrink evenly, start from 0 px basis   */
	max-width: none; /* wipe out the old 30 rem cap              */
	min-width: 16rem; /* let the card shrink below its content    */
	width: auto;
	visibility: visible;
}

.inactive {
	opacity: 25%;
}

/* ---------- Enemy image ---------- */
.char-img {
	width: 5rem;
	height: 5rem;
	object-fit: cover;
	border-radius: 0.75rem;
	flex-shrink: 0;
	border: 1px solid var(--glass-border);
}

/* ---------- Text / stats container ---------- */
.char-details {
	flex: 1;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

/* Name */
.char-name {
	font-size: 1.125rem;
	font-weight: 600;
	margin: 0 0 0.25rem;
	letter-spacing: 0.02em;
}

/* Stats row */
.char-stats {
	display: flex;
	gap: 0.75rem;
	font-weight: 500;
	font-size: 0.95rem;
	margin-bottom: 0.35rem;
}

.stat {
	display: flex;
	align-items: center;
	gap: 0.25rem;
}

/* ---------- Health bar ---------- */
/* Key idea: fill span is absolutely positioned; width = --hp custom‑prop */
.health-bar {
	position: relative;
	height: var(--bar-height);
	background: var(--bar-bg);
	border-radius: var(--bar-height);
	overflow: hidden;
}

.hp-fill {
	position: absolute;
	inset: 0;
	width: calc(var(--hp) * 100%);
	background: var(--bar-fill);
	transition: width 0.25s ease; /* smooth when JS updates --hp */
}

.hp-label {
	align-self: flex-end;
	font-size: 0.75rem;
	margin-top: 0.25rem;
	opacity: 0.8;
}

/* ---------- Health bar ---------- */
/* Key idea: fill span is absolutely positioned; width = --hp custom‑prop */
.speed-bar {
	position: relative;
	height: var(--bar-height-small);
	background: var(--bar-bg-speed);
	border-radius: var(--bar-height-small);
	margin: 2px;
	overflow: hidden;
}

.speed-fill {
	position: absolute;
	inset: 0;
	width: calc(var(--speed) * 100%);
	background: var(--bar-fill-speed);
	transition: width 0.25s ease; /* smooth when JS updates --hp */
}

.speed-label {
	align-self: flex-end;
	font-size: 0.75rem;
	margin-top: 0.25rem;
	opacity: 0.8;
}

/* ─── Attack‐cooldown bars container ─── */
.attack-bars {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	margin-left: auto; /* push to the right edge */
	align-self: stretch; /* match card height */
	padding-left: 1rem; /* breathing room */
	height: 20px;
	width: 200px;
}

/* ─── Individual attack bar ─── */
.attack-bar {
	position: relative;
	flex: 1; /* let it grow if you want taller bars */
	min-height: var(--bar-height-small);

	background: var(--bar-bg-speed);
	border-radius: var(--bar-height-small);
	overflow: hidden;
}

/* fill per‐attack cooldown */
.attack-fill {
	position: absolute;
	inset: 0;
	width: calc(var(--cd) * 100%);
	background: var(--bar-fill-speed);
	transition: width 0.2s ease;
}

/* label overlaid on the bar */
.attack-label {
	position: absolute;
	top: 50%;
	left: 0.5rem;
	transform: translateY(-50%);
	font-size: 0.65rem;
	font-weight: 500;
	color: white;
	text-shadow: 0 0 2px rgba(0, 0, 0, 0.6);
	pointer-events: none;
}

/* ─── variant: enemy ─── */
.enemy {
	--glass-bg: rgba(248, 113, 113, 0.18); /* warm red tint */
	--glass-border: rgba(248, 113, 113, 0.4);
	--bar-fill: #f43f5e; /* matches the tint */
}

/* optional: give the player a calm colour */
.player {
	--glass-bg: rgba(74, 222, 128, 0.18); /* light green tint */
	--glass-border: rgba(74, 222, 128, 0.4);
	--bar-fill: #4ade80; /* mint green HP bar */
}

.area-select__input {
	width: 30%;
	padding: 0.6rem 0.9rem;
	font: inherit;
	border-radius: var(--glass-radius);
	color: var(--text-default);
	border: 1px solid var(--glass-stroke);
	background: var(--glass-fill);
	-webkit-backdrop-filter: blur(calc(var(--glass-blur) / 1.6));
	backdrop-filter: blur(calc(var(--glass-blur) / 1.6));
	appearance: none; /* hides native arrow in most browsers */
}
.area-select__input:focus {
	outline: none;
	background: rgba(82, 74, 74, 0.849);
	border-color: var(--accent); /* same blue you use elsewhere */
}

/*  Glassy scroll panel for hunt log  */
.hunt-scroll {
	/* reuse the existing glass variables */
	position: relative;
	width: 100%;
	max-height: 200px;
	padding: 1rem 1.5rem;
	overflow-y: auto;
	display: flex;
	flex-direction: column-reverse;

	background: var(--glass-fill);
	border: 1px solid var(--glass-stroke);
	border-radius: var(--glass-radius);
	backdrop-filter: blur(var(--glass-blur));
	-webkit-backdrop-filter: blur(var(--glass-blur));
	box-shadow: 0 0 0 1px var(--glass-shadow-rim), 0 6px 18px var(--glass-shadow-drop);

	font: 0.65rem/1 var(--font-sans);
	color: var(--text-default);
}

/* subtle separator between lines */
.hunt-scroll li + li {
	margin-top: 0.4rem;
	border-top: 1px solid rgba(255, 255, 255, 0.05);
	padding-top: 0.4rem;
}

/* ▸ Custom scrollbar – WebKit / Blink */
.hunt-scroll::-webkit-scrollbar {
	width: 8px;
}
.hunt-scroll::-webkit-scrollbar-track {
	background: transparent; /* keep the frosted glass look */
}
.hunt-scroll::-webkit-scrollbar-thumb {
	background: rgba(255, 255, 255, 0.2);
	border-radius: 4px;
	transition: background 0.25s;
}
.hunt-scroll::-webkit-scrollbar-thumb:hover {
	background: rgba(255, 255, 255, 0.35);
}

/* ▸ Custom scrollbar – Firefox (Quantum) */
@supports (scrollbar-width: thin) {
	.hunt-scroll {
		scrollbar-width: thin;
		scrollbar-color: rgba(255, 255, 255, 0.2) transparent;
	}
}
