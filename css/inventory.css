/* 1) Layout panels */
.inventory-screen {
	display: flex;
	flex-direction: column;
	padding: 1rem;
	gap: 1rem;
}

.top-section {
	display: flex;
	gap: 1rem;
}

.panel {
	background: rgba(255, 255, 255, 0.1);
	backdrop-filter: blur(10px);
	border-radius: 8px;
	padding: 1rem;
	flex-shrink: 0;
}

.equipment-panel {
	width: auto;
}
.classcards-panel {
	flex: 1;
}

.equipment-grid {
	display: grid;
	grid-template-columns: 64px 64px 64px 64px;
	grid-template-rows: 64px 64px 64px 64px;
	grid-template-areas:
		"neck    head .    ."
		"hands chest . weapon"
		".    legs     .    ."
		".    feet     .    .";
	gap: 0.75rem;
}

.classcards-grid {
	display: flex;
	gap: 0.75rem;
}

.inventory-panel {
	flex: 1;
	overflow-y: auto;
}
.inventory-panel h2 {
	margin-top: 0;
}

.inventory-grid {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(64px, 1fr));
	gap: 0.75rem;
	padding-bottom: 1rem;
}

/* 2) Base slot styles */
.slot {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	border: 2px dashed #555;
	border-radius: 8px;
	background: rgba(219, 219, 219, 0.555);
	transition: background 0.2s, border-color 0.2s;
	min-width: 64px;
	max-width: 64px;
	overflow-y: hidden;
}

/* drag-over feedback */
.slot.drag-over {
	border-color: #fff;
	background: rgba(255, 255, 255, 0.15);
}

/* 3) Slot modifiers */
.slot--equipment,
.slot--classCard,
.slot--inventory {
	width: 64px;
	height: 64px;
}

/* choose your layout container to differentiate */
.slot--inventory {
	/* nothing extra; container handles grid */
}
.slot--classCard {
	/* container is flex row */
}
.slot--equipment {
	/* container is 3×3 grid */
}

/* 4) Empty vs Filled */
.slot.empty {
	border-style: dashed;
	cursor: default;
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;
	background-color: #ffffff1c;
	background-blend-mode: lighten;
}
.slot.empty .item-icon,
.slot.empty .item-count {
	display: none;
}

/* 5) Shared item visuals */
.item-icon img {
	width: 100%;
	height: 100%;
	object-fit: contain;
	pointer-events: none;
}

.item-count {
	position: absolute;
	bottom: 2px;
	right: 4px;
	font-size: 0.75rem;
	background: rgba(0, 0, 0, 0.6);
	padding: 0 4px;
	border-radius: 4px;
	pointer-events: none;
}

/* 6) Rarity borders via CSS-var overrides */
.slot.rarity-common {
	--slot-border: #888;
	--slot-glow: rgba(136, 136, 136, 0.5);
}
.slot.rarity-uncommon {
	--slot-border: #4caf50;
	--slot-glow: rgba(76, 175, 80, 0.5);
}
.slot.rarity-rare {
	--slot-border: #2196f3;
	--slot-glow: rgba(33, 150, 243, 0.5);
}
.slot.rarity-epic {
	--slot-border: #9c27b0;
	--slot-glow: rgba(156, 39, 176, 0.5);
}
.slot.rarity-legendary {
	--slot-border: #ff99008e;
	--slot-glow: rgba(255, 152, 0, 0.5);
}
.slot.rarity-unique {
	--slot-border: #e91e63;
	--slot-glow: rgba(233, 30, 99, 0.5);
}

.slot.filled {
	border: 2px solid var(--slot-border);
	box-shadow: 0 0 4px var(--slot-border), /* a tighter glow to define edges */ 0 0 12px var(--slot-glow); /* a soft, diffused halo */
	cursor: grab;
}

.slot.filled:active {
	box-shadow: 0 0 2px var(--slot-border), 0 0 8px var(--slot-glow);
	cursor: grabbing;
}

.slot--equipment[data-slot="neck"] {
	grid-area: neck;
}
.slot--equipment[data-slot="head"] {
	grid-area: head;
}
.slot--equipment[data-slot="hands"] {
	grid-area: hands;
}
.slot--equipment[data-slot="chest"] {
	grid-area: chest;
}
.slot--equipment[data-slot="chest"].empty {
	background-image: url("/images/equipment/equipment-bg-chest.png");
}
.slot--equipment[data-slot="legs"] {
	grid-area: legs;
}
.slot--equipment[data-slot="legs"].empty {
	background-image: url("/images/equipment/equipment-bg-legs.png");
}
.slot--equipment[data-slot="feet"] {
	grid-area: feet;
}
.slot--equipment[data-slot="weapon"] {
	grid-area: weapon;
}
.slot--equipment[data-slot="weapon"].empty {
	background-image: url("/images/equipment/equipment-bg-weapon.png");
}

/* ─────────────────────────────────────────────── */
/* Tooltip container                               */
/* ─────────────────────────────────────────────── */
.item-tooltip {
	position: fixed; /* follow the mouse or slot bounds */
	z-index: 1000; /* above everything in the inventory */
	width: 260px;
	max-width: 80vw; /* phone safety */
	padding: 1rem;
	border-radius: 12px;

	/* Glassmorphism */
	background: linear-gradient(to bottom, var(--tooltip-tint, rgba(255, 255, 255, 0.05)), rgba(255, 255, 255, 0.12));
	backdrop-filter: blur(12px) saturate(160%);
	border: 1px solid rgba(255, 255, 255, 0.25);
	box-shadow: 0 6px 20px rgba(0, 0, 0, 0.35);

	/* Animation: scale & fade from pointer */
	opacity: 0;
	transform: scale(0.9) translateY(4px);
	transition: opacity 120ms ease, transform 120ms ease;
	pointer-events: none; /* never block clicks */
}

/* The “visible” state is toggled via JS */
.item-tooltip.show {
	opacity: 1;
	transform: scale(1) translateY(0);
}

/* Small arrow ▾ created with a ::after pseudo‑element */
.item-tooltip::after {
	content: "";
	position: absolute;
	inset: -6px auto auto 1rem; /* top by default; tweak in JS for sides */
	width: 12px;
	height: 12px;
	background: inherit;
	border: inherit;
	border-right: none;
	border-bottom: none;
	transform: rotate(45deg);
	filter: drop-shadow(0 3px 4px rgba(0, 0, 0, 0.3));
}

/* ─────────────────────────────────────────────── */
/* Layout inside the tooltip                       */
/* ─────────────────────────────────────────────── */
.tooltip-header {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	margin-bottom: 0.25rem;
}

.tooltip-icon {
	width: 40px;
	height: 40px;
	object-fit: contain;
	flex-shrink: 0;
}

.tooltip-name {
	font-size: 1.1rem;
	line-height: 1;
	margin: 0;
}

.tooltip-type {
	font-size: 0.8rem;
	opacity: 0.8;
	margin: 0 0 0.5rem;
}

.tooltip-stats {
	list-style: none;
	padding: 0;
	margin: 0 0 0.5rem;
	font-size: 0.85rem;
}

.tooltip-stats li + li {
	margin-top: 0.25rem;
}

.tooltip-description {
	font-size: 0.8rem;
	opacity: 0.9;
	margin: 0;
}
